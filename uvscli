#! /usr/bin/env python


import os
import sys
import argparse
import getpass

from libuvs import log
from libuvs import uvsmanager

def _init_new_repo():
    """ Initialize a new repository right here in cwd. """

    cwd = os.getcwd()

    log.cli("_init_new_repo() called, cwd is: " + cwd )

    uvsmanager.init_new_uvs_repo_overwrite(repo_root_path=cwd)






def _parse_cmdline():
    """ Given command line arguments to the program are in the arguments list, parse and process them. """

    parser = argparse.ArgumentParser(description='UVSource - End to End Encrypted Distributed Version Control System')

    parser.add_argument("subcmd1", help="what should uvs do", choices=['init', 'stage', 'commit', 'branch', 'merge'])
    args = parser.parse_args()

    # print type(args) returns  <class 'argparse.Namespace'>
    #log.cliv("argparse args: " + str(args))

    if 'init' == args.subcmd1:
        log.cliv(">>>> init sub command called.")
        _init_new_repo()

    elif 'stage' == args.subcmd1:
        print "Not Yet Implemented"

    elif 'commit' == args.subcmd1:
        log.cliv(">>>> commit sub command called.")

    elif 'branch' == args.subcmd1:
        print "Not Yet Implemented"

    elif 'merge' == args.subcmd1:
        print "Not Yet Implemented"







if "__main__" == __name__:
    _parse_cmdline()